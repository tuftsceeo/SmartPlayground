from machine import Pin, SoftI2C
import ssd1306
import time

# I2C Configuration for ESP32
i2c = SoftI2C(scl=Pin(7), sda=Pin(6))  # Adjust pins as per your setup

oled_width = 128
oled_height = 64
oled = ssd1306.SSD1306_I2C(oled_width, oled_height, i2c)

# Function to draw a smiley face
def draw_smiley():
    # Clear display
    oled.fill(0)
    oled.rect(48, 12, 3, 16, 1)
    oled.rect(67, 12, 3, 16, 1)

    # Draw mouth pixels
    mouth_pixels = [
        (39, 35), (40, 35), (41, 35), (39, 36), (40, 36), (41, 36),
        (40, 37), (41, 37), (42, 37), (41, 38), (42, 38), (43, 38),
        (42, 39), (43, 39), (44, 39), (43, 40), (44, 40), (45, 40),
        (43, 41), (44, 41), (45, 41), (44, 42), (45, 42), (46, 42),
        (45, 43), (46, 43), (47, 43), (46, 44), (47, 44), (48, 44),
        (49, 44), (50, 44), (51, 44), (52, 44), (53, 44), (54, 44),
        (55, 44), (56, 44), (57, 44), (58, 44), (59, 44), (60, 44),
        (61, 44), (62, 44), (63, 44), (64, 44), (65, 44), (66, 44),
        (67, 44), (69, 43), (70, 43), (71, 43), (70, 42), (71, 42),
        (72, 42), (71, 41), (72, 41), (73, 41), (73, 40), (72, 40),
        (71, 40), (72, 39), (73, 39), (74, 39), (73, 38), (74, 38),
        (75, 38), (74, 37), (75, 37), (76, 37), (75, 35), (75, 36),
        (76, 36), (77, 36), (77, 35), (76, 35), (48, 45), (49, 45),
        (50, 45), (51, 45), (52, 45), (53, 45), (54, 45), (55, 45),
        (56, 45), (57, 45), (57, 46), (58, 46), (59, 46), (60, 46),
        (61, 46), (62, 46), (63, 45), (64, 45), (65, 45), (66, 45),
        (67, 45), (68, 45), (47, 45), (69, 45), (70, 44), (46, 41),
        (70, 41), (69, 42), (68, 43), (48, 43), (47, 42), (74, 40),
        (75, 39), (76, 38), (77, 37)
    ]

    for x, y in mouth_pixels:
        oled.pixel(x, y, 1)

    oled.show()


def draw_sad_face():
    oled.fill(0)  # Clear the display
    oled.fill_rect(46, 10, 3, 15, 1)
    oled.fill_rect(63, 10, 3, 15, 1)

    oled.fill_rect(47, 34, 18, 3, 1)  # Sad mouth
    sad_pixels = [
        (46, 35), (46, 36), (46, 37), (45, 35), (44, 35), (44, 36), (44, 37),
        (45, 37), (45, 36), (43, 36), (43, 37), (43, 38), (42, 36), (41, 36),
        (41, 37), (42, 37), (42, 38), (41, 38), (38, 38), (39, 38), (40, 38),
        (38, 39), (38, 40), (39, 40), (40, 40), (40, 39), (39, 39),
        (65, 35), (66, 35), (67, 35), (67, 36), (67, 37), (66, 37),
        (65, 37), (65, 36), (66, 36), (68, 36), (69, 36), (70, 36),
        (70, 37), (70, 38), (69, 38), (68, 38), (68, 37), (69, 37),
        (71, 38), (72, 38), (73, 38), (73, 39), (73, 40), (72, 40),
        (71, 40), (71, 39), (72, 39)
    ]
    for x, y in sad_pixels:
        oled.pixel(x, y, 1)

    oled.show()  # Show the drawn shapes on the OLED

def draw_tree():
    oled.fill(0)  # Clear the display
    oled.fill_rect(56, 41, 5, 12, 1)  # Trunk

    for y in range(33, 41):
        oled.line(58 - (y - 33), y, 58 + (y - 33), y, 1)  # Tree layers
    for y in range(27, 34):
        oled.line(58 - (y - 27), y, 58 + (y - 27), y, 1)
    for y in range(23, 29):
        oled.line(58 - (y - 23), y, 58 + (y - 23), y, 1)

    oled.show()


def draw_house():
    oled.fill(0)  # Clear the display
    for x in range(38, 38 + 15):
        for y in range(28, 28 + 24):
            oled.pixel(x, y, 1)
    for x in range(53, 53 + 6):
        for y in range(28, 28 + 14):
            oled.pixel(x, y, 1)
    for x in range(59, 59 + 10):
        for y in range(28, 28 + 24):
            oled.pixel(x, y, 1)

    for y in range(27, 12, -1):  # Roof
        start_x = 53 - (y - 12)
        end_x = 53 + (y - 12)
        for x in range(start_x, end_x + 1):
            oled.pixel(x, y, 1)

    for x in range(44, 44 + 3):
        for y in range(15, 15 + 4):
            oled.pixel(x, y, 1)

    oled.pixel(47, 18, 1)
    oled.pixel(44, 19, 1)
    oled.pixel(45, 19, 1)
    oled.pixel(44, 20, 1)

    oled.show()


def draw_flower():
    def draw_circle(x0, y0, radius):
        x, y = radius, 0
        radius_error = 1 - x
        while x >= y:
            for dx, dy in [(x, y), (y, x), (-x, y), (-y, x), (-x, -y), (-y, -x), (x, -y), (y, -x)]:
                oled.pixel(dx + x0, dy + y0, 1)
            y += 1
            if radius_error < 0:
                radius_error += 2 * y + 1
            else:
                radius_error += 2 * (y - x + 1)
                x -= 1

    oled.fill(0)
    draw_circle(63, 28, 5)

    pixel_coords = [
        (61, 22), (61, 21), (61, 20), (61, 19), (62, 18), (63, 17), (64, 18),
        (65, 19), (65, 20), (65, 21), (65, 22), (66, 23), (67, 22), (68, 21),
        (69, 20), (70, 20), (71, 20), (71, 21), (71, 22), (70, 23), (69, 24),
        (68, 25), (69, 26), (70, 26), (71, 26), (72, 26), (73, 27), (74, 28),
        (73, 29), (72, 30), (71, 30), (70, 30), (69, 30), (68, 31), (69, 32),
        (70, 33), (70, 34), (70, 35), (69, 35), (68, 35), (67, 34), (66, 33),
        (65, 34), (65, 35), (65, 36), (65, 37), (64, 38), (63, 39), (62, 38),
        (61, 37), (61, 36), (61, 35), (61, 34), (60, 33), (59, 34), (58, 35),
        (57, 35), (56, 35), (56, 34), (56, 33), (57, 32), (58, 31), (57, 30),
        (56, 30), (55, 30), (54, 30), (53, 29), (52, 28), (53, 27), (54, 26),
        (55, 26), (56, 26), (57, 26), (58, 25), (57, 24), (56, 23), (55, 22),
        (55, 21), (55, 20), (56, 20), (57, 20), (58, 21), (59, 22), (60, 23)
    ]

    for x, y in pixel_coords:
        oled.pixel(x, y, 1)
    oled.line(63, 39, 63, 50, 1)
    oled.show()

# Function to draw a duck
def draw_duck():
    def fill_circle(x, y, r):
        for i in range(-r, r + 1):
            for j in range(-r, r + 1):
                if i * i + j * j <= r * r:
                    oled.pixel(x + i, y + j, 1)

    def fill_rect(x, y, w, h):
        for i in range(w):
            for j in range(h):
                oled.pixel(x + i, y + j, 1)

    oled.fill(0)  # Clear the display

    fill_circle(39, 25, 8)  # Fill circle
    fill_rect(41, 33, 31, 13)  # Fill rectangle

    # Set pixels more compactly
    pixels = [
        (30, 25), (29, 25), (28, 26), (27, 26), (27, 27), (26, 27), (25, 28), (24, 28), 
        (26, 28), (27, 28), (28, 28), (29, 28), (30, 28), (30, 29), (31, 29), (32, 29), 
        (33, 29), (34, 29), (37, 34), (37, 35), (37, 36), (36, 37), (36, 38), (36, 39), 
        (36, 40), (36, 41), (36, 42), (36, 43), (36, 44), (36, 45), (37, 45), (37, 46), 
        (37, 47), (38, 47), (38, 48), (39, 48), (40, 49), (41, 49), (42, 50), (43, 50), 
        (44, 50), (45, 50), (46, 50), (47, 50), (47, 51), (48, 51), (49, 51), (50, 51), 
        (51, 51), (52, 51), (53, 51), (54, 51), (55, 51), (56, 51), (57, 51), (58, 51), 
        (59, 51), (60, 51), (61, 51), (61, 52), (62, 52), (63, 52), (63, 51), (64, 51), 
        (65, 51), (66, 51), (67, 51), (68, 51), (69, 51), (70, 50), (71, 50), (72, 50), 
        (72, 49), (73, 49), (74, 49), (74, 48), (75, 48), (75, 47), (76, 47), (76, 46), 
        (77, 46), (77, 45), (78, 44), (79, 43), (80, 42), (80, 41), (81, 40), (81, 39), 
        (81, 38), (82, 37), (82, 36), (82, 35), (82, 34), (82, 33), (82, 32), (82, 31), 
        (82, 30), (82, 29), (82, 28), (82, 27), (81, 27), (80, 28), (79, 28), (79, 29), 
        (78, 29), (77, 30), (76, 30), (76, 31), (75, 31), (74, 31), (74, 32), (73, 32), 
        (72, 32), (71, 32), (71, 33), (70, 33), (69, 33), (68, 33), (68, 34), (67, 34), 
        (66, 34), (65, 34), (65, 35), (64, 35), (63, 35), (62, 35), (61, 35), (40, 34), 
        (40, 35), (40, 36), (40, 37), (40, 38), (40, 39), (40, 40), (41, 40), (41, 41), 
        (41, 42), (41, 43), (40, 43), (40, 44), (40, 45), (40, 46), (40, 47), (40, 48), 
        (40, 49), (39, 47), (38, 47), (38, 46), (38, 45), (37, 45), (37, 44), (36, 44), 
        (36, 43), (36, 42), (36, 41), (36, 40), (36, 39), (36, 38), (36, 37), (36, 36), 
        (37, 36), (37, 37), (37, 38), (37, 39), (37, 40), (37, 41), (37, 42), (37, 43), 
        (38, 44), (39, 46), (39, 45), (39, 44), (39, 43), (40, 42), (40, 41), (39, 39), 
        (39, 38), (39, 37), (39, 36), (39, 35), (39, 34), (39, 40), (39, 41), (39, 42), 
        (38, 43), (38, 42), (38, 41), (38, 40), (38, 39), (38, 38), (38, 37), (38, 36), 
        (38, 35), (38, 34), (41, 46), (42, 46), (43, 46), (44, 46), (45, 46), (46, 46), 
        (47, 46), (48, 46), (49, 46), (50, 46), (51, 46), (52, 46), (53, 46), (54, 46), 
        (55, 46), (56, 46), (57, 46), (58, 46), (59, 46), (60, 46), (61, 46), (62, 46), 
        (63, 45), (64, 45), (65, 45), (66, 45), (67, 45), (68, 45), (69, 45), (70, 45), 
        (71, 45), (72, 45), (72, 46), (73, 46), (74, 46), (75, 46),
    ]

    for x, y in pixels:
        oled.pixel(x, y, 1)  # Set pixels

    # Draw lines
    lines = [
        (41, 47, 74, 47), (63, 46, 70, 46), (41, 48, 73, 47), 
        (42, 49, 72, 49), (58, 48, 73, 48), (48, 50, 68, 50), 
        (43, 51, 46, 51), (44, 52, 65, 52), (72, 33, 72, 44), 
        (73, 33, 73, 45), (74, 33, 74, 46), (75, 32, 75, 45), 
        (76, 32, 76, 45), (76, 31, 77, 44), (77, 31, 77, 36), 
        (78, 30, 78, 43), (79, 42, 79, 30), (80, 29, 80, 40), 
        (81, 37, 81, 28),
    ]

    for x0, y0, x1, y1 in lines:
        oled.line(x0, y0, x1, y1, 1)  # Draw lines

    oled.show()  # Update the display

# Function to draw a heart
def draw_heart():
    def draw_line(x0, y0, x1, y1):
        dx = abs(x1 - x0)
        dy = abs(y1 - y0)
        sx = 1 if x0 < x1 else -1
        sy = 1 if y0 < y1 else -1
        err = dx - dy

        while True:
            oled.pixel(x0, y0, 1)  # Set pixel
            if x0 == x1 and y0 == y1:
                break
            err2 = err * 2
            if err2 > -dy:
                err -= dy
                x0 += sx
            if err2 < dx:
                err += dx
                y0 += sy

    # Clear display
    oled.fill(0)

    # Draw shapes using manual methods
    draw_line(59, 57, 38, 36)  # Line 1
    draw_line(60, 56, 80, 36)  # Line 2
    draw_line(59, 30, 50, 21)  # Line 3
    draw_line(60, 29, 68, 21)  # Line 4
    draw_line(69, 20, 75, 18)  # Line 5
    draw_line(49, 20, 43, 18)  # Line 6
    draw_line(37, 35, 35, 27)  # Line 7
    draw_line(81, 35, 83, 28)  # Line 8

    # Draw individual pixels
    pixels = [
        (42, 18), (41, 18), (40, 18), (39, 18), (38, 18),
        (37, 19), (36, 20), (35, 21), (35, 22), (35, 23),
        (35, 24), (35, 25), (35, 26),
        (83, 21), (83, 22), (83, 23), (83, 24), (83, 25),
        (83, 26), (83, 27), (82, 20), (81, 19), (80, 18),
        (79, 18), (78, 18), (77, 18), (76, 18)
    ]

    for x, y in pixels:
        oled.pixel(x, y, 1)

    # Display the buffer
    oled.show()
    
# Function to draw a cat
def draw_cat():
    def draw_circle(x0, y0, radius, color):
        x, y, radius_error = radius, 0, 1 - radius
        while x >= y:
            for dx, dy in [(x, y), (y, x), (-x, y), (-y, x), (-x, -y), (-y, -x), (x, -y), (y, -x)]:
                oled.pixel(dx + x0, dy + y0, color)
            y += 1
            radius_error += 2 * y + 1 if radius_error < 0 else 2 * (y - x + 1)
            x -= radius_error >= 0

    oled.fill(0)  # Clear display
    draw_circle(63, 36, 16, 1)  # Head
    oled.line(51, 24, 51, 13, 1)  # Left ear
    oled.line(52, 14, 58, 20, 1)  # Left ear detail
    oled.line(75, 24, 75, 13, 1)  # Right ear
    oled.line(74, 14, 68, 20, 1)  # Right ear detail
    draw_circle(57, 31, 2, 1)  # Left eye
    draw_circle(68, 31, 2, 1)  # Right eye

    cat_pixels = [
        (62, 37), (62, 38), (63, 38), (61, 38), (61, 39), (62, 39),
        (56, 45), (56, 46), (57, 46), (58, 47), (59, 47), (60, 47),
        (62, 47), (64, 47), (61, 47), (63, 47), (65, 46), (66, 46), 
        (65, 45)
    ]

    for x, y in cat_pixels:
        oled.pixel(x, y, 1)

    lines = [
        (70, 37, 84, 34),
        (70, 39, 82, 44),
        (51, 36, 40, 34),
        (50, 39, 39, 41)
    ]
    
    for x1, y1, x2, y2 in lines:
        oled.line(x1, y1, x2, y2, 1)

    oled.show()  # Update display

# Function to draw a crab
def draw_crab():
    def draw_circle(x0, y0, radius, color):
        x, y, radius_error = radius, 0, 1 - radius
        while x >= y:
            for dx, dy in [(x, y), (y, x), (-x, y), (-y, x), (-x, -y), (-y, -x), (x, -y), (y, -x)]:
                oled.pixel(dx + x0, dy + y0, color)
            y += 1
            radius_error += 2 * (y + (radius_error >= 0)) - (1 if radius_error >= 0 else 0)
            x -= radius_error >= 0

    oled.fill(0)  # Clear the display

    # Draw main and eye circles
    draw_circle(60, 33, 9, 1)
    draw_circle(55, 23, 1, 1)
    draw_circle(65, 23, 1, 1)

    # Draw mouth
    for x in range(48, 54):
        oled.pixel(x, 26, 1)
    for y in range(20, 27):
        oled.pixel(48, y, 1)

    # Draw the crab body and legs
    pixels_to_draw = [
        (51, 19), (51, 18), (50, 18), (49, 18), (49, 17), (49, 16),
        (50, 16), (51, 16), (51, 15), (51, 14), (50, 14), (49, 14),
        (48, 14), (47, 14), (46, 14), (45, 14), (45, 15), (45, 16),
        (45, 17), (45, 18), (45, 19), (45, 20), (45, 21), (45, 22),
        (45, 23), (45, 24), (45, 25), (45, 26), (45, 27), (46, 27),
        (47, 27), (48, 27), (49, 27), (50, 27), (51, 27), (52, 27),
        (67, 26), (68, 26), (69, 26), (70, 26), (71, 26), (72, 26),
        (72, 25), (72, 24), (72, 23), (72, 22), (72, 21), (72, 20),
        (71, 20), (70, 20), (69, 20), (69, 19), (69, 18), (70, 18),
        (71, 18), (71, 17), (71, 16), (70, 16), (69, 16), (69, 15),
        (69, 14), (70, 14), (71, 14), (72, 14), (73, 14), (74, 14),
        (75, 14), (75, 15), (75, 16), (75, 17), (75, 18), (75, 19),
        (75, 20), (75, 21), (75, 22), (75, 23), (75, 24), (75, 25),
        (75, 26), (75, 27), (74, 27), (73, 27), (72, 27), (71, 27),
        (70, 27), (69, 27), (68, 27), (67, 27), (51, 37), (50, 38),
        (49, 39), (48, 39), (48, 40), (47, 40), (47, 41), (46, 41),
        (46, 42), (45, 42), (53, 39), (53, 40), (52, 40), (52, 41),
        (51, 41), (51, 42), (51, 43), (50, 43), (50, 44), (50, 45),
        (49, 45), (67, 39), (67, 40), (68, 40), (68, 41), (68, 42),
        (69, 42), (69, 43), (70, 43), (70, 44), (71, 44), (69, 37),
        (70, 37), (70, 38), (71, 38), (71, 39), (72, 39), (72, 40),
        (73, 40), (73, 41), (74, 41), (74, 42), (75, 42), (50, 35),
        (49, 35), (48, 35), (47, 35), (46, 36), (45, 36), (70, 34),
        (70, 35), (71, 35), (72, 35), (73, 35), (73, 36), (74, 36),
        (75, 36)
    ]

    for pixel in pixels_to_draw:
        oled.pixel(*pixel, 1)  # Unpacking tuple directly

    oled.show()  # Show the drawn shapes on the OLED
